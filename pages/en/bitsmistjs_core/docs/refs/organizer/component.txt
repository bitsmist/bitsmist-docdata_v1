====== ComponentOrganizer ======

''Inherit:Organizer''

=====Overview=====

ComponetOrganizer adds extra components according to the settings.

=====Organizing=====

ComponentOrganizer loads settings from "molds", "components" sections and adds components to the parent component. The components in the "molds" section are loaded sequentially in order. ComponentOrganizer starts loading a component and waits for the component to finish loading, then starts loading the next one. After finishing all the components in the "molds" section, it starts loading the "components" section. Unlike the "molds" section, ComponentOrganizer doesn't wait for the previous component to finish loading for the components in the "components" section. It starts loading them one after another and might be resulting in loading those components out of order, even though they start loading in the order they are in the settings.

===Sections===

  * molds
  * components

===Timings===

  * afterStart
=====Settings=====

Extra components settings are placed in the "components" or "molds" section.

<WRAP legend>Syntax:</WRAP>
<code javascript>
{
    "molds": {
        <componentName>: <componentInfo>
    },
    "components": {
        <componentName>: <componentInfo>
    },
}
</code>

<WRAP legend>Example:</WRAP>
<code javascript>
{
    "molds": {
        "PadSearch": {
            "className": "PadSearch"
        }
    },
    "components": {
        "PadSetting": {
            "className": "PadSetting"
        }
    }
}
</code>
====componentName====

''Type:String''

The name of the component. If there is no "className" option in "componentInfo", this value also becomes a class name of the component.

====componentInfo====

''Type:Object''

[[en:bitsmistjs_core:docs:component:settings|Component settings]]. This is the settings that will be returned in Component._getSettings().



=====Extended Properties=====

==== components ====

''Type:Object'' ''Inject:component'' ''get''

Returns the object holding child components that are added to the component.
=====Extended Methods=====


==== addComponent(componentName, settings, sync) ====

''Type:undefined'' ''Asynchronous'' ''Inject:component''

Adds a child component to the component. The added component instance is added to the [[#components|"components"]] property.

===Parameters===

^Parameter^Type^Description^
|componentName \\ ''Required''|String|A name of the component to add. If no "className" setting in the settings parameter, this value is also used as the class name.|
|settings \\ ''Required''|Object|Component settings.|
|sync \\ ''Default:false''|Object|Whether to return a promise that is resolved after finish loading the component.|

===Return Value===

undefined

===Referencing Settings===

  * [[en:bitsmistjs_core:docs:refs:component:component#classname|settings.className]]
  * [[en:bitsmistjs_core:docs:refs:component:component#rootnode|settings.rootNode]]
  * [[en:bitsmistjs_core:docs:refs:component:component#splitcomponent|settings.splitComponent/system.splitComponent]]
  * [[en:bitsmistjs_core:docs:refs:component:component#sync|settings.sync]]
  * [[en:bitsmistjs_core:docs:refs:component:component#tag|settings.tag]]
  * [[en:bitsmistjs_core:docs:refs:component:component#tagname|settings.tagName]]
