====== OrganizerOrganizer ======

''継承:Organizer''

===== 概要 =====

OrganizerOrganizerはオーガナイザの管理をします。各オーガナイザを適用して初期化したり、適切なタイミングで各オーガナイザを呼び出します。

===== オーガナイズ処理 =====

初期化時には”organizers”セクションから設定を読み込み、オーガナイザを追加します。また、設定で使用されているセクション名に紐づくオーガナイザも自動的に追加します。

=== セクション ===

  * organizers

=== 処理タイミング ===

  * 全て

===== 設定 =====

オーガナイザ設定は"organizers"セクションに記述します。

<WRAP legend>Syntax:</WRAP>
<code javascript>
{
    "organizers": {
        <organizerName>: {
            "attach": <attach>
        }
    },
}
</code>


====organizerName====
''型:String''

オーガナイザの名前を指定します。これはオーガナイザのクラス名になります。

====attach====
''型:Boolean''

Trueの場合、コンポーネントにアタッチされます。



===== 拡張プロパティ =====

==== organizers ====

''Type:Object'' ''Inject:Component'' ''get''

このコンポーネントに適用されたオーガナイザを保持するオブジェクトです。

=====  拡張メソッド =====

==== callOrganizers(condition, settings) ====

''型:undefined'' ''Inject:Component'' ''非同期''

コンポーネントに適用されているオーガナイザを呼び出し、オーガナイズ処理を行います。

各オーガナイザは前のオーガナイザの処理が終わってから、次のオーガナイザが呼び出されます。

=== パラメータ ===

^パラメータ^型^説明^
|condition|String|オーガナイザを呼び出す条件名で、タイミングを表す文字列です。例）”afterStart”、”afterAppend”等|
|settings|Object|各オーガナイザに渡す、設定情報です。|

=== 戻り値 ===

なし。

==== initOrganizers(settings) ====

''型:undefined'' ''Inject:Component'' ''非同期''

引数で渡された設定に応じて、必要なオーガナイザを追加・初期化します。

各オーガナイザは前のオーガナイザの初期化が終わってから、次のオーガナイザの初期化が行われます。

=== パラメータ ===

^パラメータ^型^説明^
|settings|Object|オーガナイザを適用するのに使用する設定です。また各オーガナイザに渡され、それぞれの初期化にも使われます。|

=== 戻り値 ===

なし。

