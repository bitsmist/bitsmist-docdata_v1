====== ChainableStore ======

''Inherit:Store''

===== 概要 =====

ChainableStoreはStoreクラスを継承した、他のStoreオブジェクトと連結可能なStoreクラスです。連結された場合、値取得時に自身にないアイテムは連結されたオブジェクトから取得を試みます。

<WRAP admonition note>
このページでは、親クラスと違う箇所のみを説明しています。
</WRAP>
===== プロパティ =====

==== items ====

''set'' ''get'' ''Type:Object''

保持しているアイテムのオブジェクトのコピーです。連結されている場合は、連結されているものも**含めた**全てのアイテムを返します。

代入した場合は、自身のストアに対して保存されます。連結先のストアを変更することはありません。

==== localItems ====

''get'' ''Type:Object''

自身が保持しているアイテムのオブジェクトです。連結されている場合は、連結されているものは**含まない**アイテムを返します。

===== コンストラクタ =====

==== Constructor(settings) ====

=== 引数 ===

^Parameter^Type^Description^
|settings \\ ''optional''|Object|Storeクラスを初期化する設定情報です。親クラスで設定できるキーに加え、以下のキーがあります。|
|  "chain"|Store|このStoreオブジェクトと連結します。|
|  "writeThrough"|Boolean|Trueの場合、set()/merge()での書き込み時に自身ではなく、連結先を変更します。|

===== メソッド =====

==== chain(store) ====

引数で指定されたChainedStoreオブジェクトに連結させます。連結した場合にget時に指定されたキーのアイテムが存在しない場合、連結されたオブジェクトからアイテムの取得を試みます。連結できるのは1つのオブジェクトだけです。複数回このメソッドが呼ばれた場合は、後から指定されたもので上書きされます。

=== 引数 ===

^Parameter^Type^Description^
|store|ChainableStore|連結するChainableStoreオブジェクト。|

=== 戻り値 ===

なし。

==== clone() ====

保持しているアイテムのディープコピーを作成します。連結されている場合、連結先が保持しているアイテムも含めたコピーを作成します。

=== 引数 ===

なし。

=== 戻り値 ===

保持しているアイテムのコピーを返します。

==== get(key, defaultValue) ====

keyパラメータで指定された値を返します。指定されたキーが存在しない場合defaultValueを返します。他のストアに連結されている場合、
  - 自身が保持する値
  - 連結先が保持する値
  - defaultValue
の順番に検索され、存在すればそれが返されます。全て存在しない場合はundefinedが返されます。

=== 引数 ===

^Parameter^Type^Description^
|key|String|取得するキーを指定します。|
|defaultValue \\ ''optional''|*|キーが存在しない場合に返す値を指定します。|

=== 戻り値 ===

指定されたキーの値です。

==== merge(value, merger) ====

現在保持しているアイテムに、引数で渡されたオブジェクトの内容をマージします。連結されている場合、デフォルトでは自身のアイテムにマージしますが、コンストラクタのオプションで”writeThrough”オプションをTrueにセットした場合は自身ではなく連結先のストアを書き換えます。

=== 引数 ===

^Parameter^Type^Description^
|value|Object/ \\ Array of objects|マージするオブジェクトを指定します。オブジェクトの配列を渡すこともできます。その場合は、配列内の全てのオブジェクトが順にマージされます。|
|merger \\ ''optional''|Function|マージする際に使用する関数を指定します。指定がない場合は、mergerプロパティにセットされているマージ関数が使用されます。|

=== 戻り値 ===

なし。

==== set(key, value) ====

keyパラメータで指定された項目に値をセットします。指定されたキーが存在しない場合は、自動的に作成されます。既にアイテムが存在しかつそれがオブジェクトである場合はマージされます。

連結されている場合、デフォルトでは自身のアイテムにセットしますが、コンストラクタのオプションで”writeThrough”オプションをTrueにセットした場合は自身ではなく連結先のストアを書き換えます。

キーには、ピリオド区切りで複数の階層を指定できます。以下のように指定した場合、store["settings"]["name"]に値がセットされます。

<code javascript>
store.set("settings.name", "BarHeader");
</code>

途中の階層が存在しない場合は、自動的に作成されます。上記の例の場合、もし”settings”が存在しない場合は、”settings”という階層が、自動的に作成されます。

=== 引数 ===

^Parameter^Type^Description^
|key|String|値をセットするキーを指定します。|
|value|*|セットする値を指定します。|

=== 戻り値 ===

なし。

